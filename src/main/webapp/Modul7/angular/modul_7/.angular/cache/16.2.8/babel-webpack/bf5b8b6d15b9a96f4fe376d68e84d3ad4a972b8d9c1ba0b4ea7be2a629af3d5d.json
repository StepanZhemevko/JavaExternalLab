{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, NgModule } from '@angular/core';\nimport { BehaviorSubject } from \"rxjs\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nexport class DataTransferService {\n  constructor() {\n    this.dataVariable = new BehaviorSubject(null);\n  }\n  setData(data) {\n    this.dataVariable.next(data);\n  }\n  getData() {\n    return this.dataVariable.asObservable();\n  }\n  static #_ = this.ɵfac = function DataTransferService_Factory(t) {\n    return new (t || DataTransferService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataTransferService,\n    factory: DataTransferService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport let DashboardComponent = class DashboardComponent /*implements OnInit*/ {\n  constructor(http, dataTransferService) {\n    this.http = http;\n    this.dataTransferService = dataTransferService;\n  }\n  getData() {\n    this.http.get('http://localhost:8086/certificate/all/2').subscribe(data => {\n      this.dataTransferService.setData(data); // share the data using the DataTransferService\n    });\n  }\n};\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n}), NgModule({\n  imports: [HttpClientModule]\n})], DashboardComponent);","map":{"version":3,"names":["Component","NgModule","BehaviorSubject","HttpClientModule","DataTransferService","constructor","dataVariable","setData","data","next","getData","asObservable","_","_2","factory","ɵfac","providedIn","DashboardComponent","http","dataTransferService","get","subscribe","__decorate","selector","templateUrl","styleUrls","imports"],"sources":["/home/stepan/IdeaProjects/Task2/src/main/webapp/Modul7/angular/modul_7/src/app/my-module/components/dashboard/dashboard.component.ts"],"sourcesContent":["import {Component, Injectable, NgModule, OnInit, ViewChild} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {HttpClientModule} from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataTransferService {\n  private dataVariable = new BehaviorSubject<any>(null);\n\n  setData(data: any) {\n    this.dataVariable.next(data);\n  }\n\n  getData() {\n    return this.dataVariable.asObservable();\n  }\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n@NgModule({\n  imports: [\n    HttpClientModule,\n  ]\n})\nexport class DashboardComponent /*implements OnInit*/ {\n  constructor(private http: HttpClient, private dataTransferService: DataTransferService) {}\n  getData() {\n    this.http.get('http://localhost:8086/certificate/all/2').subscribe((data: any) => {\n      this.dataTransferService.setData(data); // share the data using the DataTransferService\n    });\n  }\n\n}\n"],"mappings":";AAAA,SAAQA,SAAS,EAAcC,QAAQ,QAA0B,eAAe;AAEhF,SAAQC,eAAe,QAAO,MAAM;AACpC,SAAQC,gBAAgB,QAAO,sBAAsB;;AAIrD,OAAM,MAAOC,mBAAmB;EAHhCC,YAAA;IAIU,KAAAC,YAAY,GAAG,IAAIJ,eAAe,CAAM,IAAI,CAAC;;EAErDK,OAAOA,CAACC,IAAS;IACf,IAAI,CAACF,YAAY,CAACG,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACJ,YAAY,CAACK,YAAY,EAAE;EACzC;EAAC,QAAAC,CAAA,G;qBATUR,mBAAmB;EAAA;EAAA,QAAAS,EAAA,G;WAAnBT,mBAAmB;IAAAU,OAAA,EAAnBV,mBAAmB,CAAAW,IAAA;IAAAC,UAAA,EAFlB;EAAM;;AAwBb,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB,CAAC,sBAAqB;EACnDZ,YAAoBa,IAAgB,EAAUC,mBAAwC;IAAlE,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,mBAAmB,GAAnBA,mBAAmB;EAAwB;EACzFT,OAAOA,CAAA;IACL,IAAI,CAACQ,IAAI,CAACE,GAAG,CAAC,yCAAyC,CAAC,CAACC,SAAS,CAAEb,IAAS,IAAI;MAC/E,IAAI,CAACW,mBAAmB,CAACZ,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ;CAED;;AARYS,kBAAkB,GAAAK,UAAA,EAV9BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,EACDxB,QAAQ,CAAC;EACRyB,OAAO,EAAE,CACPvB,gBAAgB;CAEnB,CAAC,C,EACWc,kBAAkB,CAQ9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}