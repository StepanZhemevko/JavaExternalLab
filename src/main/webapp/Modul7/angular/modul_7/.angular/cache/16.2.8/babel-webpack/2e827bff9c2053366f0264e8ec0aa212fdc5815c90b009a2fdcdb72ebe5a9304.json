{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let Login = class Login {\n  constructor(dataService, router) {\n    this.dataService = dataService;\n    this.router = router;\n  }\n  onSubmit(loginData) {\n    this.dataService.getUserByLogin(loginData.login).subscribe(user => {\n      // Check if the password is correct (you might want to hash passwords in a real app)\n      if (user && user.password === loginData.password) {\n        // Login successful, navigate to some page\n        this.router.navigate(['/dashboard']);\n      } else {\n        // Invalid credentials, handle accordingly (e.g., show an error message)\n        console.log('Invalid login credentials');\n      }\n    }, error => {\n      // Handle errors (e.g., user not found)\n      console.error('Error during login:', error);\n    });\n  }\n};\nLogin = __decorate([Component({\n  selector: 'app-my-component',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], Login);","map":{"version":3,"names":["Component","Login","constructor","dataService","router","onSubmit","loginData","getUserByLogin","login","subscribe","user","password","navigate","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Steve\\IdeaProjects\\Task2\\src\\main\\webapp\\Modul7\\angular\\modul_7\\src\\app\\shared\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class Login {\n  constructor(private dataService: DataService, private router: Router) {}\n\n  onSubmit(loginData: { login: string; password: string }): void {\n    this.dataService.getUserByLogin(loginData.login).subscribe(\n      (user) => {\n        // Check if the password is correct (you might want to hash passwords in a real app)\n        if (user && user.password === loginData.password) {\n          // Login successful, navigate to some page\n          this.router.navigate(['/dashboard']);\n        } else {\n          // Invalid credentials, handle accordingly (e.g., show an error message)\n          console.log('Invalid login credentials');\n        }\n      },\n      (error) => {\n        // Handle errors (e.g., user not found)\n        console.error('Error during login:', error);\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,KAAK,GAAX,MAAMA,KAAK;EAChBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,QAAQA,CAACC,SAA8C;IACrD,IAAI,CAACH,WAAW,CAACI,cAAc,CAACD,SAAS,CAACE,KAAK,CAAC,CAACC,SAAS,CACvDC,IAAI,IAAI;MACP;MACA,IAAIA,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKL,SAAS,CAACK,QAAQ,EAAE;QAChD;QACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;OACrC,MAAM;QACL;QACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;IAE5C,CAAC,EACAC,KAAK,IAAI;MACR;MACAF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;CACD;AArBYd,KAAK,GAAAe,UAAA,EALjBhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWlB,KAAK,CAqBjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}