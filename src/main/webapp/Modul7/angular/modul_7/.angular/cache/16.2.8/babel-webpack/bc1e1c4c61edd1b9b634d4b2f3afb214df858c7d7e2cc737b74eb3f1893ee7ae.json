{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getDataByService(page) {\n    return this.http.get(`http://localhost:8086/certificate/all/${page}`);\n  }\n  createUser(user) {\n    return this.http.post(`http://localhost:8086/user/create`, user);\n  }\n  getUserByLogin(login) {\n    return this.http.get(`http://localhost:8086/user/login/${login}`);\n  }\n  createCoupon(coupon) {\n    return this.http.post(`http://localhost:8086/certificate/create`, coupon);\n  }\n  buyCoupon(userLogin, couponName) {\n    const url = `${this.baseUrl}/${userLogin}/${couponName}`;\n    return this.http.post(url, null); // Assuming you don't need to send any data in the body\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n}","map":{"version":3,"names":["DataService","constructor","http","getDataByService","page","get","createUser","user","post","getUserByLogin","login","createCoupon","coupon","buyCoupon","userLogin","couponName","url","baseUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\Steve\\IdeaProjects\\Task2\\src\\main\\webapp\\Modul7\\angular\\modul_7\\src\\app\\shared\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getDataByService(page: number) {\n    return this.http.get(`http://localhost:8086/certificate/all/${page}`);\n  }\n  createUser(user: any): Observable<any> {\n    return this.http.post(`http://localhost:8086/user/create`, user);\n  }\n  getUserByLogin(login: string): Observable<any> {\n    return this.http.get(`http://localhost:8086/user/login/${login}`);\n  }\n  createCoupon(coupon: any): Observable<any> {\n    return this.http.post(`http://localhost:8086/certificate/create`, coupon);\n  }\n\n  buyCoupon(userLogin: string, couponName: string): Observable<any> {\n    const url = `${this.baseUrl}/${userLogin}/${couponName}`;\n    return this.http.post(url, null); // Assuming you don't need to send any data in the body\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAACC,IAAY;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,yCAAyCD,IAAI,EAAE,CAAC;EACvE;EACAE,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,mCAAmC,EAAED,IAAI,CAAC;EAClE;EACAE,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,oCAAoCK,KAAK,EAAE,CAAC;EACnE;EACAC,YAAYA,CAACC,MAAW;IACtB,OAAO,IAAI,CAACV,IAAI,CAACM,IAAI,CAAC,0CAA0C,EAAEI,MAAM,CAAC;EAC3E;EAEAC,SAASA,CAACC,SAAiB,EAAEC,UAAkB;IAC7C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,IAAIH,SAAS,IAAIC,UAAU,EAAE;IACxD,OAAO,IAAI,CAACb,IAAI,CAACM,IAAI,CAACQ,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;EACpC;EAAC,QAAAE,CAAA,G;qBAnBUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}